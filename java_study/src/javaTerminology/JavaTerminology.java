package javaTerminology;

public class JavaTerminology {
	/*
		public: 모든 클래스에서 접근이 가능함(다른 패키지라도)
		protected: 같은 패키지 내 또는 상속받은 클래스에서 접근이 가능함(다른 패키지, 부모 클래스에서는 접근불가)
		default: 접근 제한자를 명시하지 않으면 기본적으로 가지는 접근제한자임, 같은 패키지 내에서만 접근이 가능함(다른 패키지에서는 접근 불가)
		private: 해당 클래스 내에서만 접근 가능(다른 클래스, 다른패키지 접근 불가)
		static 변수: 클래스에 속하며, 모든 인스턴스가 공유하는 변수임
		static 메서드: 클래스에 속하며, 인스턴스 없이 호출이 가능한 메서드임 
		final 변수: 한 번 초기화되면 값을 변경할 수 없는 변수임
		final 메서드: 하위 클래스에서 오버라이딩할 수 없는 메서드임
		final 클래스: 상속이 불가능한 클래스임
		abstract 클래스: 인스턴스화할 수 없으며 추상 메서드를 포함할 수 있는 클래스임
		abstract 메서드: 구현부가 없는 메서드로 하위 클래스에서 반드시 구현해야 함
		interface: 메서드의 선언부만 생성함 (구현부는 하위 클래스에서 implements 해서 구현부를 작성하게됨)
		extends: 클래스를 상속받을 때 사용하며 상속하는 클래스는 부모클래스, 상속받는 클래스는 자녀클래스로 불림
		implements: 인터페이스를 구현할 때 사용을 함
		this: 현재 객체를 참조할 때 사용함
		super: 부모 클래스의 변수나 메서드를 참조나 호출할 때 사용함
		Overloading: 같은 이름의 메서드를 여러 개 정의 할 수 있지만 매개변수의 타입이나 개수가 다른것을 말함
		Overriding: 부모 클래스의 메서드를 재정의해서 사용할때 씀
		try: 예외가 발생할 수 있는 코드를 감싸는 블록(구역)을 지칭함
		catch: try 블록에서 발생한 예외를 처리하는 블록(구역)을 지칭함
		finally: 예외 발생 여부와 상관없이 항상 실행되는 블록(구역)을 지칭함	
	 */
}
